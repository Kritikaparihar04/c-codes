#include<iostream>
using namespace std;
#include<bits/stdc++.h>
int LCS(string s,string t )
{ 
  int ans;
  
 int m=s.size();
 int n=t.size();
 //created array of size m+1,n+1
       int **output=new int*[m+1];
   for(int i=0;i<=m;i++)
   {
       output[i]=new int [n+1];
   }

   for(int i=0;i<=m;i++)
   {
       for(int j=0;j<=n;j++)
       {
           output[i][j]=-1;
       }
   }

    //base case
    if(s.size()==0||t.size()==0)
    return 0;
   
 
 
//check for the existence
    if(output[m][n]!=-1) //means some value is present 
    {
        return output[m][n];
    }


   if(s[0]==t[0])
    {
    ans=1+LCS(s.substr(1),t.substr(1)  );
    }
    else{
    //recursive calls
    int x=LCS(s.substr(1),t  );
    int y=LCS(s.substr(1),t.substr(1) );
    int z=LCS(s,t.substr(1) );

 ans=max(x,max(y,z));
 
    }
//save for the future use
output[m][n]=ans;
 
 return  ans;

}



int main()
{
    string s="abcfd";
    string t="zfadgdbcfd";

 
  cout<<LCS(s,t);


    
}
