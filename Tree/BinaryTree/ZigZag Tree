
void zigZagOrder(BinaryTreeNode<int> *root) 
{
    
    stack<BinaryTreeNode<int>*> s1;
    stack<BinaryTreeNode<int>*> s2;
    
    s1.push(root);
    
    
    
    while(!s1.empty()||!s2.empty())
    {
        
      while(!s1.empty())     //till the stack 1 is not empty
       {
      
        BinaryTreeNode<int>*front=s1.top();
        cout<<front->data<<" ";
        s1.pop();
       
        if(front->left)
            s2.push(front->left);
        if(front->right)
            s2.push(front->right);
        
       }
    
    
    cout<<endl;   //to print the next kevek in new line
    
    while(!s2.empty())
    {
        	BinaryTreeNode<int>*front=s2.top();
           cout<<front->data<<" ";
           s2.pop();
        if(front->right)
            s1.push(front->right);
        
        if(front->left)
            s1.push(front->left);
        
        
    }
    
    
    cout<<endl;
    
    
}

}
