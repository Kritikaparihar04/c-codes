
BinaryTreeNode<int>* helper(int *input,int si,int ei) {
    if(si>ei){
        return NULL;
    }
     int index;
   
	if((ei-si)%2 ==0 ){
         index = (ei+si+1)/2;
   	}
    else{
         index = (ei+si)/2;
    }
     
    
    BinaryTreeNode<int>* root= new BinaryTreeNode<int>(input[index]);
    root->left = helper(input, si,index-1);
    root->right = helper(input, index+1,ei);
    return root;
}




BinaryTreeNode<int>* constructTree(int *input, int n) {
    /* Don't write main().
     * Don't read input, it is passed as function argument.
     * Return output and don't print it.
     * Taking input and printing output is handled automatically.
     */
        
    if(n==0){
        return NULL;
    }
	BinaryTreeNode<int>* ans = helper(input ,0 , n-1);
   return ans; 

}
