
void rootToLeafPathsSumToK(BinaryTreeNode<int>*root,int k , vector<int>v){
    if(root==NULL)
        return;
    if(k<=0)
        return;
    if(root->left==NULL && root->right==NULL && root->data==k){
        v.push_back(root->data);
        for(int i=0;i<v.size();i++){
            cout<<v[i];
            if(i<v.size()-1){
                cout<<" ";
            }
        }
        cout<<endl;
        return;
        }
    v.push_back(root->data);
    rootToLeafPathsSumToK(root->left,k-root->data,v);
    rootToLeafPathsSumToK(root->right,k-root->data,v);
}
void rootToLeafPathsSumToK(BinaryTreeNode<int> *root, int k) {
    // Write your code here
	vector<int>v;
    rootToLeafPathsSumToK(root,k,v);
}
