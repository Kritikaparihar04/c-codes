
class base{
  public:
    Node<int>*head;
    Node<int>*tail;
    
    base()
    {
        head=NULL;
        tail=NULL;
    }
         
    
};


base helper(BinaryTreeNode<int>*root)
{
    //OBJECT CREATED
    base combinedList;
    
    //BASE CASE
    if(root==NULL)
        return combinedList;
    
    base LeftLL=helper(root->left);
    base RightLL=helper(root->right);
    
    //create a node
 Node<int>*newNode=new Node<int> (root->data);
    
    //CONNECTION
    
    if(LeftLL.tail!=NULL)
    {
    
     LeftLL.tail->next=newNode;
    }
     
    newNode->next=RightLL.head;
    
    
    //CONDITIONS CHECK
    
    
    if(LeftLL.head!=NULL)
    {
        combinedList.head=LeftLL.head;
    }
    else
    {
        combinedList.head=newNode;
    }
    
    if(RightLL.tail==NULL)
    {
        combinedList.tail=newNode;
    }
    else
    {
        combinedList.tail=RightLL.tail;
    }        
    
    return combinedList;
}


Node<int>* constructLinkedList(BinaryTreeNode<int>* root) {
	// Write your code here
    base ans=helper(root);     //we are accepting the object in type of base class
    return ans.head;
}
