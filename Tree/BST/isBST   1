/**********************************************************
	Following is the Binary Tree Node class structure

	template <typename T>
	class BinaryTreeNode {
    	public : 
    	T data;
    	BinaryTreeNode<T> *left;
    	BinaryTreeNode<T> *right;

    	BinaryTreeNode(T data) {
        	this -> data = data;
        	left = NULL;
        	right = NULL;
    	}
	};

***********************************************************/
#include<math.h>
#include<climits>

int maximum(BinaryTreeNode<int>*root)
{
  if(root==NULL)
      return INT_MIN;
    
   return max(root->data,max(maximum(root->left),maximum(root->right)));
              
}
 

int minimum(BinaryTreeNode<int>*root)
    {
    if(root==NULL)
        return INT_MAX;
                  
     return min(root->data,min(minimum(root->left),minimum(root->right)))   ;
    }


bool isBST(BinaryTreeNode<int> *root) {
	if(root==NULL)
        return true;   //if root Null IT means it is a bst
    
    int maxLeft=maximum(root->left);
    int minRight=minimum(root->right);
    
    
    
    //we have to check the 4 condition 
    
    bool output=(root->data>maxLeft)&&(root->data<=minRight)&&isBST(root->left)&&isBST(root->right);
       return output;
    
}
