#include<queue>
void printLevelWise(TreeNode<int>* root) 
{
    
    //edge case
    if(root==NULL)
        return;
    queue<TreeNode<int>*> pendingQ;
   	pendingQ.push(root);
    
    while(pendingQ.size() != 0){ 
        
        
        TreeNode<int>*front = pendingQ.front();
     	// cout<<root<<":";
        pendingQ.pop();
        cout<<front->data<<':';
    	// cout<<endl;
    	// int num=children.size();
    	// for(int i=0;i<num;i++){
        for(int i=0; i< front->children.size(); i++){
            if((front->children.size()-i)  == 1){
                 cout<<front->children.at(i)->data;
            	pendingQ.push(front->children.at(i));
                continue;
            }
	        // TreeNode<int>*child=new TreeNode<int>(childData);
	        // front->children.push_back(child);
	        // pendingQ.push(child);
        	cout<<front->children.at(i)->data<<',';
            pendingQ.push(front->children.at(i));
    	}
        cout <<endl;
	}    
}
